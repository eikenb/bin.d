#!/bin/sh

# Author: John Eikenberry <jae@zhar.net>
# License: GPL 3.0 <http://www.gnu.org/licenses/gpl.txt>

# XXX  change to use fping

# google - 64.233.187.99
# isp nameserver -
#   primary 24.197.160.17
#   secondary 24.197.160.18
#
yahoo=206.190.36.45
google=173.194.33.6
draal=71.19.157.91
level3=4.0.0.8
#ISP=24.197.160.17 # isp nameserver

# default
IP=$google

flip=
simpleping=
count=1
interval=1
timeout=2
cmd=`basename $0`
delay=1
adapt=
quiet=
vol=10

ARGS="$@"
usage () {
    echo "usage: $cmd [options] [IP]"
    echo "-i ping interval"
    echo "-s sleep delay"
    echo "-q quiet (no sounds)"
    echo '-f flip to upyet when down'
    if [ "$cmd" = "upyet" ]; then
        echo "-p ping"
        echo "-c N count N times"
        echo "-A use Adaptive ping"
    else
        echo '-t response timeout'
    fi
    echo "-y yahoo IP"
    echo "-g google IP (default)"
    echo "-l Level3 IP"
    echo "-d draal (my vps at prgmr.com)"
    echo "-v 1-10 - volume - 10 normal, 1 almost silent"
    exit 0
}

while getopts Aadglhpfqyi:c:t:s:v: arg; do
    case $arg in
        A) adapt=true; shift;;
        p) simpleping=true; [ $count -eq 1 ] && count= ; shift;;
        c) count=$OPTARG; shift; shift;;
        i) interval=$OPTARG; shift; shift;;
        f) flip=true; shift;;
        q) quiet=true; shift;;
        d) IP=$draal; shift;;
        v) vol=$OPTARG; shift; shift;;
        l) IP=$level3; shift;;
        g) IP=$google; shift;;
        y) IP=$yahoo; shift;;
        t|w) timeout=$OPTARG; shift; shift;;
        s|d) delay=$OPTARG; shift; shift;;
        h) usage;;
    esac
done

vol=$( echo "$vol/10." | bc -l)

# non-flagged arg is IP/host
[ -n "$1" ] && IP=$1

ERR="\033[0;31m"
HIT="\033[1;32m"
RST="\033[0m"

report () {
    echo "$cmd:\tpings:\t$total\tmisses:$totalmiss"
    trap '' 0
    [ "$1" = "exit" ] && exit
}

ping='/bin/ping'

if [ "$cmd" = "downyet" ]; then
    trap 'report exit' 0 2
    miss=0
    total=0
    totalmiss=0
    until [ $miss -ge 3 ]; do
        total=$(($total + 1))
        if ! out=$($ping -W $timeout -c $count $IP); then
            miss=$(($miss + 1))
            totalmiss=$(($totalmiss + 1))
            echo "${ERR}"`date`"${RST}";
        else
            miss=0
            echo -n "${HIT}"`date`"${RST}  --  ";
            echo -n "$out" | grep -o "time=[0-9.]\+"
        fi
        sleep $delay;
    done

    if [ -n "$flip" ]; then
        [ -n "$quiet" ] || /usr/bin/play -v $vol -q ~/.themes/sounds/thunder.wav &
        echo "${ERR}-------------------- DOWN --------------------${RST}"
        report
        sleep $delay;
        exec upyet $ARGS
    else
        report
        [ -n "$quiet" ] || exec /usr/bin/play -v $vol -q ~/.themes/sounds/thunder.wav
    fi
else
    ping="$ping -i $interval"
    [ "$adapt" = "true" ] && ping="$ping -A"

    if [ -n "$simpleping" ] ; then
        if [ -n "$count" ]; then
            echo $ping -c $count $IP
            $ping -c $count $IP
        else
            $ping $IP
        fi
    else
        until $ping -q -c $count $IP > /dev/null; do
            sleep $delay;
            echo "${ERR}$(date) -- 100% packet loss${RST}"
        done

        echo "${HIT}-------------------- UP --------------------${RST}"
        if [ -n "$flip" ]; then
            [ -n "$quiet" ] || /usr/bin/play -v $vol -q ~/.themes/sounds/itsawak2.wav &
            exec downyet $ARGS
        else
            [ -n "$quiet" ] \
                || exec /usr/bin/play -v $vol -q ~/.themes/sounds/itsawak2.wav
        fi
    fi
fi

#/usr/bin/aplay /usr/local/share/sounds/hamster.au;
## vim: expandtab
