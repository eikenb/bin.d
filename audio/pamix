#!/bin/sh

## script to change volume of pulse-audio via command line
## for now only works on the default sink

# this lets it work on systems over ssh
# XDG_RUNTIME_DIR is usally set by the session manager
export XDG_RUNTIME_DIR=/run/user/$(id -u)

sink_name=$(pacmd stat | awk '/sink name/ { print $4 }')
default_sink=$(pacmd list-sinks | awk '/\* index:/ {print $3}')

volume=$(pacmd dump-volumes \
    | awk -F= "/Sink $default_sink/ { print \$3 }" \
    | awk '{ print $1$4,$8$11}')

usage() {
    [ -n "$1" ] && echo "$1"
    echo "Usage: $(basename $0) [command] [percent]"
    echo "Commands:"
    echo "\t+/up       volume up"
    echo "\t-/down     volume down"
    echo "Examples:"
    echo "\t\"$(basename $0) up 10\" - increase volume by 10%"
    echo "\t\"$(basename $0) -5\" - decrease volume by 5%"
    exit 1
}

change=$(echo "$1" | grep -o "[0-9]\+")
[ -n "$2" ] && change="$2"
if [ -z "$change" ]; then
    change=$(( 5 * $(echo $1 | grep -o -- "[+-]" | wc -w) ))
fi

volume=$(pacmd dump-volumes \
    | awk -F= "/Sink $default_sink/ { print \$3 }" \
    | awk '{ print $4 }')

ceil () { vol="${1%*%}"; chg="$2"
    newvol=$(( $vol + $chg ))
    mod=$(( $newvol - 100 ))
    [ $newvol -gt 100 ] && echo $(( $chg - $mod )) || echo $chg
}

floor () { vol="${1%*%}"; chg="$2"
    newvol=$(( $volume - $chg ))
    [ $newvol -lt 0 ] && echo $(( $chg + $newvol )) || echo $chg
}

show_vol() {
    # final volume
    out=$(pacmd dump-volumes \
            | awk -F= "/Sink $default_sink/ { print \$2 }" \
            | awk '{ print $4"/"$11}')
    if [ -t 0 ]; then
        echo $sink_name
        echo $out
    else
        if ! dunstify_vol_bar $out
        then
            notify-send -t 2000 -u low ${out}
        fi
    fi
}

# only works w/ dunst notification daemon
dunstify_vol_bar(){
    type dunstify > /dev/null || return 1
    vol=${out%%%*}
    bar=$(seq -s "â”€" $(($vol/5)) | tr -d '0-9')
    icon=audio-volume-high-symbolic
    if [ $vol -lt 33 ]; then icon=audio-volume-low-symbolic
    elif [ $vol -lt 67 ]; then icon=audio-volume-medium-symbolic; fi
    [ $vol -eq 100 ] && space="   " || space="    "
    dunstify -i $icon -r 407 -u low -t 2000 "[$vol]$space$bar"
}

show_mute(){
    if pacmd list-sinks | awk '/* index/,/muted/' | grep -q 'muted: yes'
    then
        status="Sound Muted"
    else
        status="Sound Un-muted"
    fi
    if [ -t 0 ]; then
        echo $status
    else
        notify-send -t 2000 -u low ${status}
    fi
}

case "$1" in
    -h|--help)
        usage
        ;;
    [0-9]*)
        pactl -- set-sink-volume @DEFAULT_SINK@ ${change}%
        show_vol
        ;;
    [+]*|u*)
        change=$(ceil $volume $change)
        pactl -- set-sink-volume @DEFAULT_SINK@ +${change}%
        show_vol
        ;;
    [-]*|d*)
        change=$(floor $volume $change)
        pactl -- set-sink-volume @DEFAULT_SINK@ -${change}%
        show_vol
        ;;
    mute|m*)
        pactl -- set-sink-mute @DEFAULT_SINK@ toggle
        show_mute
        ;;
    *)
        show_vol
        ;;
esac


