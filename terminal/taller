#!/bin/sh

set -e -u

chg=12
mult=1
# based on term settings
# currently using alacritty with padding of 6 (per side, so *2)
padding=$((6 * 2))

case $# in
    0) set -- $mult $chg ;;
    1) set -- $1 $chg ;;
esac

cmd=$(basename $0)

case "$1" in
    reset|r*) cmd="${cmd}-reset" ;;
    [0-9]*) mult="$1" ;;
esac
[ "$mult" -gt 5 ] && { echo "bad multipler"; exit 1; }

chg=$2 # never used this, but maybe one day..

tty_dim=$(stty size)
tty_height=${tty_dim%% *}
win_height=$(xwininfo -id "$(xdotool getwindowfocus)" | awk '/Height:/ {print $2}')
# need actual text rendering area, so subtrace padding (+1 for round up)
win_height_adj=$((win_height - padding + 1))
row=$((win_height_adj/tty_height))

tty_width=${tty_dim##* }
win_width=$(xwininfo -id "$(xdotool getwindowfocus)" | awk '/Width:/ {print $2}')
win_width_adj=$((win_width - padding + 1))
column=$((win_width_adj/tty_width))

new_win_width=-1
new_win_height=-1
case $cmd in
    taller-reset)
        new_win_height=$((row * 36 + padding))
        new_win_width=$((column * 84 + padding))
        ;;
    smaller-reset)
        new_win_height=$((row * 24 + padding))
        new_win_width=$((column * 84 + padding))
        ;;
    eighty)
        new_win_height=${win_height}
        new_win_width=$((column * 84 + padding))
        ;;
    smaller)
        new_win_height=$((win_height - (row * (chg*mult))))
        new_win_width=$((column * $tty_width + padding))
        ;;
    taller)
        new_win_height=$((win_height + (row * (chg*mult))))
        new_win_width=$((column * $tty_width + padding))
        ;;
esac

wmctrl -r ":ACTIVE:" -e 0,-1,-1,$new_win_width,$new_win_height
